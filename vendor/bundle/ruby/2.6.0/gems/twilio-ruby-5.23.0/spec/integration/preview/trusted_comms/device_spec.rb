##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
# 
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'Device' do
  it "can create" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.preview.trusted_comms.devices.create(phone_number: 'phone_number', push_token: 'push_token')
    }.to raise_exception(Twilio::REST::TwilioError)

    values = {'PhoneNumber' => 'phone_number', 'PushToken' => 'push_token', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'post',
        url: 'https://preview.twilio.com/TrustedComms/Devices',
        data: values,
    ))).to eq(true)
  end

  it "receives create responses" do
    @holodeck.mock(Twilio::Response.new(
        201,
      %q[
      {
          "sid": "DDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "binding_sid": "BSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "phone_number": "+573000000000",
          "url": "https://preview.twilio.com/TrustedComms/Devices"
      }
      ]
    ))

    actual = @client.preview.trusted_comms.devices.create(phone_number: 'phone_number', push_token: 'push_token')

    expect(actual).to_not eq(nil)
  end
end